

--문자함수
--대소문자 변환 문자함수
SELECT UPPER('Oracle Database'),
        LOWER ('Oracel Database'),
        INITCAP('Oracle Database')
FROM dual;


SELECT employee_id, last_name, UPPER(last_name),
        job_id, INITCAP(job_id)
FROM employees;

SELECT employee_id, last_name , job_id
FROM employees
WHERE last_name=INITCAP('king');
--위에랑 아래랑 같은 출력문
SELECT employee_id, last_name , job_id
FROM employees
WHERE LOWER(last_name)='king';

--CONCAT
SELECT CONCAT('Hello', 'World')
FROM dual;

SELECT CONCAT(CONCAT('Hello',' '), 'World')
FROM dual;


                    ---concat은( || : 연결 연산자와 같은 역활)
SELECT employee_id, CONCAT(first_name, last_name) full_name, job_id, email
FROM employees;

SELECT employee_id, CONCAT(CONCAT(first_name, ' '), last_name) full_name, job_id, email
FROM employees;


                    ---SUBSTAR 문자열 짜르기
SELECT SUBSTR('HelloWorld', 1, 5), SUBSTR('HelloWorld', 6), SUBSTR('HelloWorld', -5,5)
FROM dual;





---the last word from last name is 'n'
SELECT *
FROM employees
WHERE SUBSTR(last_name, -1, 1) = 'n';
-- 위에랑 같은 부분||
SELECT *
FROM employees
WHERE last_name LIKE'%n';



---LENGTH
SELECT LENGTH('Oracle Databse'), LENGTH('오라클 데이터베이스')
FROM dual;


SELECT *
FROM employees
WHERE LENGTH(last_name) >6;

--INSTR (java: index of와 비슷)
SELECT INSTR('Hello World', ' ')
FROM dual;

SELECT INSTR(last_name, 'a'), last_name
FROM employees;

SELECT *
FROM employees
WHERE INSTR(last_name, 'a')=0;
--위에랑 같은 의미 ||
SELECT *
FROM employees
WHERE last_name NOT LIKE'%a%';


-- L 이 두번째로 등장하는곳을 알아보는것
SELECT INSTR('HelloWorld', 'l', 4,2), INSTR('HelloWOrld', 'l', 1,3)
FROM dual;

--LPAD, RPAD
SELECT employee_id, RPAD(last_name, 15, 'FUCK') last_name, LPAD(salary, 20, 'ASHOLE') salary
FROM employees;

--REPLACE
SELECT REPLACE('jual and dual', 'j', 'f')
FROM dual;


--복합 문자 함수?
SELECT employee_id, last_name, 
    REPLACE(last_name, SUBSTR(last_name,2,2), '**') AS RESULT
    
    FROM employees;
    
    
--TRIM ->1)양쪽의 공백을 지우는 것, 2) 양쪽에 데이터 지울때 사용
SELECT TRIM('HelloWorld             ')
FROM dual;

SELECT TRIM('d' FROM 'ddongg'), TRIM('g'FROM 'ddongg')
FROM dual;

SELECT TRIM('w' FROM'window'), TRIM(LEADING'w' FROM'window'),  TRIM(TRAILING'w' FROM'window')
FROM dual;

SELECT TRIM(0 FROM 000000012345670),TRIM(LEADING 0 FROM 000000012345670)
FROM dual;
--TRIM 은 한개 글자만 가능하다
SELECT TRIM('XY' FROM'XYKKY')
FROM dual;

--1
SELECT CONCAT ('yedam', 'Database')
FROM dual;
--2
SELECT *
FROM employees
WHERE LOWER(job_id) = 'it_prog';
---3
SELECT SUBSTR('WelcomeToCodingWorld', 8,2 ), SUBSTR('WelcomeToCodingWorld', 16,5 ),SUBSTR('WelcomeToCodingWorld', 1,19 )
FROM dual;
----4
SELECT  last_name,
REPLACE(last_name, SUBSTR(last_name,2,3), '***') AS RESULT
FROM employees
WHERE LENGTH(last_name)=5;
---5
SELECT employee_id, LPAD(last_name, 10 , '*') , RPAD(first_name,10, '#') 
FROM employees;
--6
SELECT employee_id, CONCAT(first_name, last_name) NAME,
        job_id,LENGTH(last_name) NAME_LENGTH,
        INSTR(last_name ,'a') "CONTAINS 'a'?"
FROM employees
WHERE SUBSTR(job_id,4) ='REP'; 

--숫자 함수
SELECT ROUND(45.923,2),ROUND(45.923),ROUND(45.923,-1)
FROM dual;

SELECT TRUNC(45.923 ,2), TRUNC(45.923), TRUNC(45.923,-1)
FROM dual;

SELECT last_name, salary, MOD(salary, 500)
FROM employees
WHERE job_id = 'SA_REP';

SELECT FLOOR(45.9999), CEIL(45.9999)
FROM dual;

---날짜 연산
--sysdate

SELECT sysdate
FROM dual;

--일수 더하기
SELECT sysdate +10
FROM dual;

--근무 일수 구하기
SELECT employee_id, last_name, hire_date,  sysdate-hire_date AS 근무일수
FROM employees;

SELECT employee_id, last_name, hire_date,  TRUNC(sysdate-hire_date) AS 근무일수
FROM employees;

--근무한 주
SELECT employee_id, last_name, hire_date,  ROUND((sysdate-hire_date)/7) AS WEEKS
FROM employees;

-- 근무한 달
SELECT employee_id, last_name, hire_date,  ROUND((sysdate-hire_date)/30) AS MONTHS
FROM employees;

--근무한 해
SELECT employee_id, last_name, hire_date,  ROUND((sysdate-hire_date)/365) AS YEARS
FROM employees;


--날짜 함수
SELECT MONTHS_BETWEEN('22/01/01','22/12/01')
FROM dual;

SELECT MONTHS_BETWEEN('22/12/03','22/01/01')
FROM dual;

SELECT employee_id, last_name,
TRUNC(MONTHS_BETWEEN(sysdate, hire_date)) AS 근무기간
FROM employees;

SELECT ADD_MONTHS(sysdate,3),LAST_DAY(sysdate), NEXT_DAY(sysdate,'금')
FROM dual;

SELECT NEXT_DAY(sysdate, '금요일'), NEXT_DAY(sysdate, '금'), NEXT_DAY(sysdate, 6)
FROM dual;

ALTER SESSION SET
NLS_DATE_FORMAT = 'RRRR-MM-DD HH24:MI';

SELECT sysdate+1/24
FROM dual;

ALTER SESSION SET
NLS_DATE_LANGUAGE = 'korean';

SELECT NEXT_DAY(sysdate, 'FRIDAY')
FROM dual;

--2020 -> 2000
SELECT ROUND(sysdate, 'year'), ROUND(sysdate, 'month'), ROUND(sysdate, 'dd'), ROUND(sysdate,'day')
FROM dual;



--변환함수
--날짜 -> 문자로 변환

SELECT employee_id, last_name, hire_date
FROM employees;

SELECT employee_id, last_name, TO_CHAR(hire_date, 'yyyy-mm-dd')
FROM employees;

SELECT TO_CHAR(sysdate, 'yyyy/mm/dd hh24:mi:ss'),
       TO_CHAR(sysdate+3/24, 'yyyy/mm/dd hh24:mi:ss'),
       TO_CHAR(sysdate+40/(24*60),'yyyy/mm/dd hh24:mi:ss')
FROM dual;


--DDSPTH
SELECT TO_CHAR(hire_date, 'yyyy"년" Ddspth month hh:mi:ss pm'), hire_date
FRom employees;


--숫자를 문자로 변환
SELECT employee_id, last_name, salary, TO_CHAR(salary, '$999,999')
From employees;

SELECT employee_id, last_name, salary, TO_CHAR(salary, 'L999,999')
FROM employees;

--q(쿼터): 분기 , w(주):해당 월에 몇주차

SELECT employee_id, last_name,
 TO_CHAR(hire_date, 'yyyy-mm-dd day' ) AS hire_date,
 TO_CHAR(hire_date, 'q') AS 분기, --1년은 4분기
 TO_CHAR(hire_date, 'w')||'주차' AS 주수
 FROM employees;

SELECT TO_CHAR(sysdate, 'w')||'주차'
FROM dual;

--문자 ->숫자로 변환
SELECT TO_NUMBER('$3,400', '$999,999')
FROM dual;

SELECT employee_id, last_name, salary, hire_date
FROM employees
WHERE salary > TO_NUMBER('$8,000','$9,999');

--문자 ->날짜 변환
SELECT employee_id, last_name, salary, hire_date
FROM employees
WHERE hire_date > TO_DATE ('1999/12/31', 'yy/mm/dd');

SELECT employee_id, last_name, salary, hire_date
FROM employees
WHERE hire_date > TO_DATE ('99/12/31', 'rr/mm/dd');

--nvl
SELECT employee_id, last_name, salary, commission_pct, NVL(commission_pct, 0)
FROM employees;

SELECT  employee_id, last_name, salary, (salary +salary*commission_pct)AS monthly_sal
FROM employees;

SELECT employee_id, last_name, salary, (salary+salary*NVL(commission_pct,0 ) )AS monthly_sal
FROM employees;

SELECT employee_id, last_name, salary+salary *NVL(commission_pct,0) AS monthly_sal,
       NVL2(commission_pct, 'Y', 'N')AS comm_get
       FROM employees;
       
       
SELECT last_name, salary, commission_pct,
     NVL2(commission_pct, 'SAL+COMM', 'SAL')income
     FROM employees
     WHERE department_id IN(50,80);
     
     
SELECT employee_id, last_name, salary+salary *NVL(commission_pct,0) AS monthly_sal,
       NVL2(commission_pct, 'Y', 'N')AS comm_get,
       NULLIF(salary, salary+salary*NVL(commission_pct,0)) AS result
       FROM employees;
       
SELECT first_name, LENGTH(first_name) "expr1",
       last_name, LENGTH(last_name)"expr2",
        NULLIF(LENGTH(first_name),LENGTH(last_name))result
        FROM employees;
        
--일반함수 COALESCE
SELECT employee_id, commission_pct, manager_id,
    COALESCE(commission_pct, manager_id,1234) AS result
    FROM employees;
    
SELECT last_name, employee_id,
COALESCE(TO_CHAR(commission_pct), TO_CHAR(manager_id),
'No Commission and No Manager')
FROM employees;

--case when then
SELECT last_name, job_id, salary,
CASE job_id WHEN 'IT_PROG' THEN 1.10*salary
            WHEN 'ST_CLERK' THEN 1.15*salary
            WHEN 'SA-REP' THEN 1.20*salary
    ELSE   salary END AS REVISE_SALARY
    FROM employees;
    
  SELECT last_name, job_id, salary,
CASE  WHEN job_id= 'IT_PROG' THEN 1.10*salary
            WHEN job_id='ST_CLERK' THEN 1.15*salary
            WHEN job_id= 'SA-REP' THEN 1.20*salary
    ELSE   salary END AS REVISE_SALARY
    FROM employees;
    
SELECT employee_id, last_name, salary,
CASE WHEN salary <5000 THEN'L'
WHEN salary BETWEEN 5000 AND 9000 THEN 'M'
ELSE 'H' END AS salary_grade
FROM employees;
      
--NVL2 -> CASE WHEN THEN
SELECT employee_id, last_name, salary +salary *NVL(commission_pct,0) AS monthly_sal,
    NVL2(commission_pct, 'Y', 'N') AS comm_get
    FROM employees;
    
--DECODE
SELECT last_name, job_id, salary,
CASE job_id WHEN 'IT_PROG' THEN 1.10*salary
            WHEN 'ST_CLERK' THEN 1.15*salary
            WHEN 'SA-REP' THEN 1.20*salary
    ELSE   salary END AS REVISE_SALARY
    FROM employees;
    
SELECT last_name, job_id, salary,
DECODE(job_id, 'IT_PROG', 1.10*salary,
                'ST_CLERK', 1.15*salary,
                'SA_REP', 1.20*salary,
                salary) REVISED_SALARY
FROM employees;

--java switch, 시험 성적 -> 99~90/9 , 89~80/8

SELECT last_name, salary,
DECODE(TRUNC(salary/2000, 0), 
    0, 0.00,
    1, 0.09,
    2, 0.20,
    3, 0.30,
    4, 0.40,
    5, 0.42,
    6, 0.44,
        0.45) TAX_RATE
FROM    employees;
